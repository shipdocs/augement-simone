"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[237],{2521:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"do_task","title":"do_task","description":"The do_task command is the primary command for executing development work. It instructs the AI to pick up a specific task and implement it.","source":"@site/do_task.md","sourceDirName":".","slug":"/do_task","permalink":"/claude-simone/do_task","draft":false,"unlisted":false,"editUrl":"https://github.com/helmi/claude-simone/tree/main/do_task.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docsSidebar","previous":{"title":"Legacy System Workflow","permalink":"/claude-simone/legacy-workflow"},"next":{"title":"initialize","permalink":"/claude-simone/initialize"}}');var s=n(4848),o=n(8453);const a={sidebar_position:2},r="do_task",l={},d=[{value:"Usage",id:"usage",level:2},{value:"Arguments",id:"arguments",level:2},{value:"Description: The Core Development Loop",id:"description-the-core-development-loop",level:2},{value:"1. Task Identification &amp; Analysis",id:"1-task-identification--analysis",level:3},{value:"2. Context Validation",id:"2-context-validation",level:3},{value:"3. Execution &amp; Status Update",id:"3-execution--status-update",level:3},{value:"4. Quality Assurance &amp; Finalization",id:"4-quality-assurance--finalization",level:3},{value:"When to Use",id:"when-to-use",level:2}];function c(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"do_task",children:"do_task"})}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"do_task"})," command is the primary command for executing development work. It instructs the AI to pick up a specific task and implement it."]}),"\n",(0,s.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(t.p,{children:"To let the AI select the next available task:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"/simone:do_task\n"})}),"\n",(0,s.jsx)(t.p,{children:"To specify a task directly:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"/simone:do_task T01_S01\n"})}),"\n",(0,s.jsx)(t.h2,{id:"arguments",children:"Arguments"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"task_id"})})," (optional): The ID of the task to execute (e.g., ",(0,s.jsx)(t.code,{children:"T01_S01"}),", ",(0,s.jsx)(t.code,{children:"T003"}),"). If not provided, the AI will select the next open task from the current sprint or the general task list."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"description-the-core-development-loop",children:"Description: The Core Development Loop"}),"\n",(0,s.jsx)(t.p,{children:"This command orchestrates the core development loop, ensuring the AI works with full context and performs necessary quality checks:"}),"\n",(0,s.jsx)(t.h3,{id:"1-task-identification--analysis",children:"1. Task Identification & Analysis"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Identifies Task:"})," It finds the specified task file (or the next available one) in the ",(0,s.jsx)(t.code,{children:".simone/03_SPRINTS/"})," or ",(0,s.jsx)(t.code,{children:".simone/04_GENERAL_TASKS/"})," directories."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Analyzes Task:"})," It reads the task description, goals, acceptance criteria, and any technical guidance provided within the task file."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"2-context-validation",children:"2. Context Validation"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Validates Context:"})," Before starting, it performs a critical context validation to ensure the task belongs to the current sprint, its dependencies are met, and it aligns with the project's overall requirements."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"3-execution--status-update",children:"3. Execution & Status Update"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Sets Status:"})," It updates the task's status to ",(0,s.jsx)(t.code,{children:"in_progress"})," in both the task file and the project manifest."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Executes Work:"})," It follows the implementation plan outlined in the task file, iterating through the subtasks and making the required code changes in the project codebase."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"4-quality-assurance--finalization",children:"4. Quality Assurance & Finalization"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Performs Quality Checks:"})," After the implementation is complete, it automatically runs a code review and the project's test suite to ensure the changes are high-quality and don't introduce regressions."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Finalizes Status:"})," Upon successful review and testing, it marks the task as ",(0,s.jsx)(t.code,{children:"completed"})," and renames the task file to reflect this (e.g., ",(0,s.jsx)(t.code,{children:"TX01_S01..."}),")."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"when-to-use",children:"When to Use"}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsx)(t.p,{children:"Use this command whenever you are ready to start development work on a planned and detailed task."})})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var i=n(6540);const s={},o=i.createContext(s);function a(e){const t=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);