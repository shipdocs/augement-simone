"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[857],{1444:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"prompt-reference","title":"Prompt Reference","description":"The MCP Server provides a set of built-in prompts that can be used to perform common development tasks. These prompts are defined in YAML and use Handlebars for templating, making them highly configurable.","source":"@site/prompt-reference.md","sourceDirName":".","slug":"/prompt-reference","permalink":"/claude-simone/prompt-reference","draft":false,"unlisted":false,"editUrl":"https://github.com/helmi/claude-simone/tree/main/prompt-reference.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"docsSidebar","previous":{"title":"Recommended Workflow","permalink":"/claude-simone/mcp-workflow"}}');var s=t(4848),r=t(8453);const o={sidebar_position:4},c="Prompt Reference",a={},d=[{value:"Available Prompts",id:"available-prompts",level:2},{value:"<code>create-task</code>",id:"create-task",level:3},{value:"<code>do_task</code>",id:"do_task",level:3},{value:"<code>generate-changelog</code>",id:"generate-changelog",level:3},{value:"<code>pre-commit</code>",id:"pre-commit",level:3},{value:"<code>summarize-activity</code>",id:"summarize-activity",level:3},{value:"<code>update-issue</code>",id:"update-issue",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"prompt-reference",children:"Prompt Reference"})}),"\n",(0,s.jsx)(n.p,{children:"The MCP Server provides a set of built-in prompts that can be used to perform common development tasks. These prompts are defined in YAML and use Handlebars for templating, making them highly configurable."}),"\n",(0,s.jsx)(n.h2,{id:"available-prompts",children:"Available Prompts"}),"\n",(0,s.jsx)(n.p,{children:"Here is a list of the core prompts available in the MCP server, along with their descriptions, arguments, and typical usage scenarios."}),"\n",(0,s.jsx)(n.h3,{id:"create-task",children:(0,s.jsx)(n.code,{children:"create-task"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description:"})," An interactive prompt that guides the user and AI through the process of defining and creating a new task."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Usage:"})," This prompt is designed to be used conversationally to elicit requirements, explore solutions, and generate a well-defined task specification, which can then be used to create a GitHub issue."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"do_task",children:(0,s.jsx)(n.code,{children:"do_task"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description:"})," A simple prompt to instruct the AI to begin work on a specific task."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Arguments:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"task_id"})," (required): The ID of the task to be executed."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Usage:"})," This prompt serves as the entry point for the AI to start an implementation task, providing it with the initial context of the project and the task ID."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"generate-changelog",children:(0,s.jsx)(n.code,{children:"generate-changelog"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description:"})," A utility prompt to help with the creation of human-readable changelog entries."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Usage:"})," It instructs the AI to run the ",(0,s.jsx)(n.code,{children:"conventional-changelog"})," tool to generate raw commit messages and then rewrite them into a user-friendly format suitable for a ",(0,s.jsx)(n.code,{children:"CHANGELOG.md"})," file."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"pre-commit",children:(0,s.jsx)(n.code,{children:"pre-commit"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description:"})," Generates a pre-commit checklist for the developer or AI."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Usage:"})," This prompt dynamically generates a checklist of quality assurance steps (like linting, testing, and formatting) based on the project's configuration in ",(0,s.jsx)(n.code,{children:".simone/project.yaml"}),". It serves as a final quality gate before code is committed."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"summarize-activity",children:(0,s.jsx)(n.code,{children:"summarize-activity"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description:"})," Generates a comprehensive summary of development activity based on the activity log."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Arguments:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"period"})," (optional): The time period to summarize (e.g., ",(0,s.jsx)(n.code,{children:"today"}),", ",(0,s.jsx)(n.code,{children:"7d"}),"). Defaults to ",(0,s.jsx)(n.code,{children:"today"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Usage:"})," This prompt queries the activity log database and generates a report including an overview, daily breakdowns, and analysis of productivity patterns."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"update-issue",children:(0,s.jsx)(n.code,{children:"update-issue"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description:"})," A prompt for updating an existing GitHub issue."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Usage:"})," This prompt can be used to close, reopen, edit, or comment on a GitHub issue, providing the necessary commands for either the GitHub CLI or the GitHub MCP server tools, depending on the project's configuration."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var i=t(6540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);