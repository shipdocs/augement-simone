"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[572],{8453:(e,t,o)=>{o.d(t,{R:()=>s,x:()=>c});var n=o(6540);const i={},r=n.createContext(i);function s(e){const t=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(r.Provider,{value:t},e.children)}},9675:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"mcp-workflow","title":"Recommended Workflow","description":"The workflow for the MCP Server is more direct and tool-oriented than the legacy system. Instead of using high-level commands that guide the AI through a long process, the MCP server exposes a set of focused prompts and tools that the AI can use as needed.","source":"@site/mcp-workflow.md","sourceDirName":".","slug":"/mcp-workflow","permalink":"/claude-simone/mcp-workflow","draft":false,"unlisted":false,"editUrl":"https://github.com/helmi/claude-simone/tree/main/mcp-workflow.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docsSidebar","previous":{"title":"Architecture","permalink":"/claude-simone/mcp-architecture"},"next":{"title":"Prompt Reference","permalink":"/claude-simone/prompt-reference"}}');var i=o(4848),r=o(8453);const s={sidebar_position:3},c="Recommended Workflow",l={},a=[{value:"The Development Cycle",id:"the-development-cycle",level:2},{value:"1. Configuration: Defining Your Project",id:"1-configuration-defining-your-project",level:3},{value:"2. Prompt-Driven Interaction: Initiating Actions",id:"2-prompt-driven-interaction-initiating-actions",level:3},{value:"3. Tool Usage: Structured Project Interaction",id:"3-tool-usage-structured-project-interaction",level:3},{value:"4. Continuous Logging: Building Project History",id:"4-continuous-logging-building-project-history",level:3},{value:"Example Scenario",id:"example-scenario",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"recommended-workflow",children:"Recommended Workflow"})}),"\n",(0,i.jsx)(t.p,{children:"The workflow for the MCP Server is more direct and tool-oriented than the legacy system. Instead of using high-level commands that guide the AI through a long process, the MCP server exposes a set of focused prompts and tools that the AI can use as needed."}),"\n",(0,i.jsx)(t.h2,{id:"the-development-cycle",children:"The Development Cycle"}),"\n",(0,i.jsx)(t.h3,{id:"1-configuration-defining-your-project",children:"1. Configuration: Defining Your Project"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Action:"})," Create or update the ",(0,i.jsx)(t.code,{children:".simone/project.yaml"})," file."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Purpose:"})," To define the project's structure, stack, and tooling. This configuration is loaded by the server and can be used to dynamically adjust the behavior of prompts and tools."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"2-prompt-driven-interaction-initiating-actions",children:"2. Prompt-Driven Interaction: Initiating Actions"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Action:"})," The user or AI invokes a prompt by name (e.g., ",(0,i.jsx)(t.code,{children:"create-task"}),", ",(0,i.jsx)(t.code,{children:"summarize-activity"}),")."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Purpose:"})," The server uses its Handlebars templating engine to render a detailed, context-rich prompt based on the project's configuration and the arguments provided. This is the primary way to initiate complex actions."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"3-tool-usage-structured-project-interaction",children:"3. Tool Usage: Structured Project Interaction"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Action:"})," The AI uses the tools exposed by the server, such as ",(0,i.jsx)(t.code,{children:"log_activity"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Purpose:"})," To interact with the project in a structured way. For example, after completing a piece of work, the AI would use ",(0,i.jsx)(t.code,{children:"log_activity"})," to record what it did. This is a more explicit and reliable way of tracking progress than parsing AI chat history."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"4-continuous-logging-building-project-history",children:"4. Continuous Logging: Building Project History"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Tool:"})," ",(0,i.jsx)(t.code,{children:"log_activity"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Purpose:"})," Throughout the development process, all significant actions should be logged. This creates a persistent, queryable history of the project's development, which can then be used by other prompts (like ",(0,i.jsx)(t.code,{children:"summarize-activity"}),")."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"example-scenario",children:"Example Scenario"}),"\n",(0,i.jsx)(t.p,{children:"A typical interaction might look like this:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["A developer wants to create a new feature. They invoke the ",(0,i.jsx)(t.code,{children:"create-task"})," prompt."]}),"\n",(0,i.jsx)(t.li,{children:"The Simone MCP server returns a detailed, interactive prompt that guides the AI through the process of defining the task, based on the project's configured workflow."}),"\n",(0,i.jsx)(t.li,{children:"The AI and the developer work through the prompt, defining the task's specification."}),"\n",(0,i.jsxs)(t.li,{children:["Once the task is defined, the AI might use a (future) ",(0,i.jsx)(t.code,{children:"github_create_issue"})," tool to create an issue on GitHub."]}),"\n",(0,i.jsxs)(t.li,{children:["The AI would then immediately call the ",(0,i.jsx)(t.code,{children:"log_activity"})," tool to record that a new task was created."]}),"\n",(0,i.jsxs)(t.li,{children:["When a developer starts working on the task, they would use the ",(0,i.jsx)(t.code,{children:"do_task"})," prompt, and upon completion, another ",(0,i.jsx)(t.code,{children:"log_activity"})," call would be made."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"This workflow is more granular and tool-centric, which is a more robust and extensible model for AI-assisted development."})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);